# source /opt/homebrew/bin/env_parallel.zsh

#loud=$1
loud='loud'

export MK_SCRIPTS="$DOCSFLDR/scripts"
export ZSHRC_FOLDER="$MK_SCRIPTS"/rc/zsh
export NANO_DATE_FORMAT="+%s.%N"

path_array=(
  "$MK_SCRIPTS"/util
  "$MK_SCRIPTS"/learning
  /opt/homebrew/opt/texinfo/bin
  /Users/m/.cargo/bin
  /Users/m/.sdkman/candidates/gradle/current/bin/
  /opt/homebrew/opt/ruby/bin
  /opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/bin
  /opt/homebrew/opt/tcl-tk/bin
  "$PATH"
)

export PATH=${(j.:.)path_array}

# echo $PATH



function source_up_R () {
  local current_path="$1"
  # -l     use a long listing format
  # -F, --classify[=WHEN]
  #       append indicator (one of */=>@|) to entries; WHEN can be 'always' (default if omitted), 'auto', or 'never
  # -X Sort by file extension
  # -r, --reverse  reverse order while sorting

  # F to match on.  -X & --reverse so that stuff in root gets executed before others.
  # If something needs to go after something else, just put the one for after into a folder peer to the before-guy
  local line
  # gls -1F --reverse --group-directories-first "$current_path" | while IFS= read -r line; do
  gls -1FXr "$current_path" | while IFS= read -r line; do
    local file_or_dir="${current_path}/${line%?}"

    case "${line[-1]}" in
      '*')
        if [ "$loud" = 'loud' ]; then
          start_time=$(gdate $NANO_DATE_FORMAT)
          printf 'Sourcing:  %s' "${file_or_dir#${ZSHRC_FOLDER}/}"
        fi
        source "$file_or_dir"
        if [ "$loud" = 'loud' ]; then
          end_time=$(gdate $NANO_DATE_FORMAT)
          elapsed=$((end_time - start_time))
          elapsed_string="${elapsed:0:4}"
          if [ $(echo "$elapsed_string > 0.1" | bc) -eq 1 ] ; then
            print '\033[93;1m...took ${elapsed_string} seconds\033[0m' 
          fi
          printf '\n'
        fi

        ;;
      '/')
        source_up_R "$file_or_dir"
      ;;
    esac

  done
}



source_up_R "$ZSHRC_FOLDER"




# The next line updates PATH for the Google Cloud SDK.
# [ -r '/Users/m/b/google-cloud-sdk/path.zsh.inc' ] && source '/Users/m/b/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
# [ -r '/Users/m/b/google-cloud-sdk/completion.zsh.inc' ] && source '/Users/m/b/google-cloud-sdk/completion.zsh.inc'

# [ -r /Users/m/.iterm2_shell_integration.zsh ] && source /Users/m/.iterm2_shell_integration.zsh || true